<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1442" height="745"><defs></defs><g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="7" y="303" width="438" height="130" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="0" y="296" width="438" height="130"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 296 L 438 296 L 438 426 L 0 426 L 0 296 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 321 L 438 321" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 344 L 438 344" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="200.5" y="315.5">CTime</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="338.5">~std::chrono::system_clock clock</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="361.5">«constructor»+CTime()</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="376.5">+getDayTime(a_u8Hours: uint8_t&amp;, a_u8Minuts: uint8_t&amp;): getDayTime</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="391.5">+getDayTimeS(a_u8Hours: uint8_t&amp;, a_u8Minuts: uint8_t&amp;): getDayTimeS</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="406.5">+getData(pcData: char*, a_u32length: uint32_t): getData</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="421.5">+getTime(): getTime</text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="7" y="519" width="450" height="72" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="0" y="512" width="450" height="72"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 512 L 450 512 L 450 584 L 0 584 L 0 512 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 537 L 450 537" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 547 L 450 547" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="153" y="531.5">CLightsInterfacesFactory</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="564.5">«constructor»+CLightsInterfacesFactory()</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="579.5">+getInterface(a_eInterface: ILightSourceInterface::eInterfaces): getInterface[*]</text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="815" y="87" width="476" height="85" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="808" y="80" width="476" height="85"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 808 80 L 1284 80 L 1284 165 L 808 165 L 808 80 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 808 105 L 1284 105" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 808 115 L 1284 115" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="italic" font-weight="bold" text-decoration="none" x="948" y="99.5">IApplicationStateInterfaceListener</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="813" y="132.5">+handleStateChanged(a_sCurrState: sCurrentState): handleStateChanged</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="813" y="147.5">+handleLightIntesityChanged(a_ui32LxVal: uint32_t): handleLightIntesityChanged</text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="7" y="455" width="512" height="162" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="0" y="448" width="512" height="162"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 448 L 512 448 L 512 610 L 0 610 L 0 448 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 473 L 512 473" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 0 483 L 512 483" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="182.5" y="467.5">IApplicationStateInterface</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="500.5">«constructor»+virtual ~IApplicationStateInterface()</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="515.5">+init(): init</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="530.5">+deinit(): deinit</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="545.5">+start(): start</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="560.5">+stop(): stop</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="575.5">+getState(): getState</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="590.5">+registerListener(a_pListener: IApplicationStateInterfaceListener*): registerListener</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="5" y="605.5">+deregisterListener(a_pListener: IApplicationStateInterfaceListener*): deregisterListener</text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="23" y="567" width="483" height="192" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="16" y="560" width="483" height="192"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 560 L 499 560 L 499 752 L 16 752 L 16 560 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 585 L 499 585" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 595 L 499 595" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="185" y="579.5">ISensorCommonInterface</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="612.5">«constructor»~virtual ~ISensorCommonInterface()</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="627.5">~init(): init</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="642.5">~deinit(): deinit</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="657.5">~setParentPoiter(a_pParent: ISensorCommonInterfaceListener*): setParentPoiter</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="672.5">~isAvailable(): isAvailable</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="687.5">~isActive(): isActive</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="702.5">~start(): start</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="717.5">~stopThread(): stopThread</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="732.5">~unleashSensor(a_u8Repeat: uint8_t, a_u32TimePeriod: uint32_t): unleashSensor</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="747.5">~getSensorID(): getSensorID</text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="655" y="231" width="774" height="327" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="648" y="224" width="774" height="327"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 648 224 L 1422 224 L 1422 551 L 648 551 L 648 224 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 648 249 L 1422 249" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 648 259 L 1422 259" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1004.5" y="243.5">CAppMngr</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="276.5">«constructor»+CAppMngr()</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="291.5">+create(): create</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="306.5">+destroy(): destroy</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="321.5">+init(): init</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="336.5">+deinit(): deinit</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="351.5">+run(): run</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="366.5">+stopApp(): stopApp</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="381.5">+handleMessage(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): handleMessage</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="396.5">+handleStateChanged(a_sCurrState: sCurrentState): handleStateChanged</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="411.5">+handleLightIntesityChanged(a_ui32LxVal: uint32_t): handleLightIntesityChanged</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="426.5">-i_call_TurnOnReq(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): i_call_TurnOnReq</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="441.5">-i_call_TurnOffReq(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): i_call_TurnOffReq</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="456.5">-i_call_WhiteReq(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): i_call_WhiteReq</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="471.5">-i_call_BrightnessReq(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): i_call_BrightnessReq</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="486.5">-i_call_ColourReq(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t): i_call_ColourReq</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="501.5">-softStart(a_sData: smartLightsFrontend::CSmartLightsInterface::sData_t, a_u8MaxBr: uint8_t, a_u32TimeDuring: uint32_t): softStart</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="516.5">-logInCSV(a_u8Density: uint8_t): logInCSV</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="531.5">~(CAppMngr::**)(: CTime): (CAppMngr::**)</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="653" y="546.5">~ILightSourceInterface::eGroup toEnum(a_u8Data: u_int8_t): ILightSourceInterface::eGroup toEnum</text></g></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 1042 223 L 1044 166" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1051.7011261915568 186.6080725780389 L 1044 166 L 1034.8734106857073 186.01762641993892"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 1051.7011261915568 186.6080725780389 L 1044 166 L 1034.8734106857073 186.01762641993892 L 1051.7011261915568 186.6080725780389" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="891" y="768" width="9" height="44" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="884" y="761" width="9" height="44"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 884 761 L 893 761 L 893 805 L 884 805 L 884 761 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 884 786 L 893 786" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 884 796 L 893 796" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="888.5" y="780.5"></text></g></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="951" y="679" width="225" height="59" opacity="0.2"></rect></g><g transform="translate(10,-70) scale(1,1)"><rect fill="#ffffff" stroke="none" x="944" y="672" width="225" height="59"></rect></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 944 672 L 1169 672 L 1169 731 L 944 731 L 944 672 Z Z" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 944 712 L 1169 712" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 944 722 L 1169 722" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="960" y="691.5">IApplicationStateInterfaceListener</text></g></g><g transform="translate(10,-70) scale(1,1)"><g><path fill="none" stroke="none"></path><text fill="#000000" stroke="none" font-family="Arial" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1003.5" y="706.5">(from CppReverse)</text></g></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 1046 552 L 1054 671" stroke-miterlimit="10"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1044.2365921918126 651.2851358622225 L 1054 671 L 1061.036742253335 650.1557140093471"></path></g><g transform="translate(10,-70) scale(1,1)"><path fill="none" stroke="#000000" d="M 1044.2365921918126 651.2851358622225 L 1054 671 L 1061.036742253335 650.1557140093471 L 1044.2365921918126 651.2851358622225" stroke-miterlimit="10"></path></g></g></svg>